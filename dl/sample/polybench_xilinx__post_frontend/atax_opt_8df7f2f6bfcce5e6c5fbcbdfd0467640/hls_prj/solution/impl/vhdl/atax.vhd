-- ==============================================================
-- Generated by Vitis HLS v2023.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity atax is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    x_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    x_ce0 : OUT STD_LOGIC;
    x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    y_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_out_full_n : IN STD_LOGIC;
    y_out_write : OUT STD_LOGIC );
end;


architecture behav of atax is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "atax_atax,hls_ip_2023_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.114000,HLS_SYN_LAT=21912,HLS_SYN_TPT=none,HLS_SYN_MEM=13,HLS_SYN_DSP=0,HLS_SYN_FF=2967,HLS_SYN_LUT=3097,HLS_VERSION=2023_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal trunc_ln11_fu_264_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln11_reg_351 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln11_fu_274_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln11_reg_360 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln11_fu_280_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln11_reg_365 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_285_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_reg_375 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal buff_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_ce0 : STD_LOGIC;
    signal buff_A_we0 : STD_LOGIC;
    signal buff_A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_ce1 : STD_LOGIC;
    signal buff_A_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_1_ce0 : STD_LOGIC;
    signal buff_A_1_we0 : STD_LOGIC;
    signal buff_A_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_A_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_1_ce1 : STD_LOGIC;
    signal buff_A_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_x_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buff_x_ce0 : STD_LOGIC;
    signal buff_x_we0 : STD_LOGIC;
    signal buff_x_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_x_ce1 : STD_LOGIC;
    signal buff_x_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_x_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buff_x_1_ce0 : STD_LOGIC;
    signal buff_x_1_we0 : STD_LOGIC;
    signal buff_x_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_x_1_ce1 : STD_LOGIC;
    signal buff_x_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buff_y_out_ce0 : STD_LOGIC;
    signal buff_y_out_we0 : STD_LOGIC;
    signal buff_y_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_ce1 : STD_LOGIC;
    signal buff_y_out_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buff_y_out_1_ce0 : STD_LOGIC;
    signal buff_y_out_1_we0 : STD_LOGIC;
    signal buff_y_out_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_1_ce1 : STD_LOGIC;
    signal buff_y_out_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buff_y_out_2_ce0 : STD_LOGIC;
    signal buff_y_out_2_we0 : STD_LOGIC;
    signal buff_y_out_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_2_ce1 : STD_LOGIC;
    signal buff_y_out_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buff_y_out_3_ce0 : STD_LOGIC;
    signal buff_y_out_3_we0 : STD_LOGIC;
    signal buff_y_out_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_y_out_3_ce1 : STD_LOGIC;
    signal buff_y_out_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp1_ce0 : STD_LOGIC;
    signal tmp1_we0 : STD_LOGIC;
    signal tmp1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_ap_start : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_ap_done : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_ap_idle : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_ap_ready : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_we0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_ce : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_ce : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_ap_start : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_ap_done : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_ap_idle : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_ap_ready : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_A_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_atax_Pipeline_lprd_2_fu_225_A_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_we0 : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_we0 : STD_LOGIC;
    signal grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_ap_start : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_ap_done : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_ap_idle : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_ap_ready : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_we0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_we0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_we0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_we0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce1 : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_ce : STD_LOGIC;
    signal grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_ce : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_ap_start : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_ap_done : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_ap_idle : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_ap_ready : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_y_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_atax_Pipeline_lpwr_1_fu_246_y_out_write : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_ce0 : STD_LOGIC;
    signal grp_atax_Pipeline_lp1_lp2_fu_216_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln11_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_atax_Pipeline_lprd_2_fu_225_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_atax_Pipeline_lp3_lp4_fu_235_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_atax_Pipeline_lpwr_1_fu_246_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln5_1_fu_325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln5_fu_308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_74 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal trunc_ln11_1_fu_293_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln12_fu_331_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln11_2_fu_296_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln5_fu_299_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln5_1_fu_316_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_386_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_386_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_386_ce : STD_LOGIC;
    signal grp_fu_390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_390_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_390_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_390_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component atax_atax_Pipeline_lp1_lp2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buff_A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_ce0 : OUT STD_LOGIC;
        buff_A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_ce1 : OUT STD_LOGIC;
        buff_A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_1_ce0 : OUT STD_LOGIC;
        buff_A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_1_ce1 : OUT STD_LOGIC;
        buff_A_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_x_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buff_x_ce0 : OUT STD_LOGIC;
        buff_x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_x_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buff_x_ce1 : OUT STD_LOGIC;
        buff_x_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_x_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buff_x_1_ce0 : OUT STD_LOGIC;
        buff_x_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_x_1_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buff_x_1_ce1 : OUT STD_LOGIC;
        buff_x_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        tmp1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        tmp1_ce0 : OUT STD_LOGIC;
        tmp1_we0 : OUT STD_LOGIC;
        tmp1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tmp1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_386_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_ce : OUT STD_LOGIC;
        grp_fu_390_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_390_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_390_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_390_p_ce : OUT STD_LOGIC );
    end component;


    component atax_atax_Pipeline_lprd_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln16 : IN STD_LOGIC_VECTOR (11 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i : IN STD_LOGIC_VECTOR (5 downto 0);
        buff_A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_ce0 : OUT STD_LOGIC;
        buff_A_we0 : OUT STD_LOGIC;
        buff_A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_A_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_1_ce0 : OUT STD_LOGIC;
        buff_A_1_we0 : OUT STD_LOGIC;
        buff_A_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atax_atax_Pipeline_lp3_lp4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        tmp1_ce0 : OUT STD_LOGIC;
        tmp1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_ce0 : OUT STD_LOGIC;
        buff_A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_ce1 : OUT STD_LOGIC;
        buff_A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_1_ce0 : OUT STD_LOGIC;
        buff_A_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_A_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        buff_A_1_ce1 : OUT STD_LOGIC;
        buff_A_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_ce0 : OUT STD_LOGIC;
        buff_y_out_we0 : OUT STD_LOGIC;
        buff_y_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_ce1 : OUT STD_LOGIC;
        buff_y_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_1_ce0 : OUT STD_LOGIC;
        buff_y_out_1_we0 : OUT STD_LOGIC;
        buff_y_out_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_1_ce1 : OUT STD_LOGIC;
        buff_y_out_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_2_ce0 : OUT STD_LOGIC;
        buff_y_out_2_we0 : OUT STD_LOGIC;
        buff_y_out_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_2_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_2_ce1 : OUT STD_LOGIC;
        buff_y_out_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_3_ce0 : OUT STD_LOGIC;
        buff_y_out_3_we0 : OUT STD_LOGIC;
        buff_y_out_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_3_ce1 : OUT STD_LOGIC;
        buff_y_out_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_386_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_386_p_ce : OUT STD_LOGIC;
        grp_fu_390_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_390_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_390_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_390_p_ce : OUT STD_LOGIC );
    end component;


    component atax_atax_Pipeline_lpwr_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        y_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        y_out_full_n : IN STD_LOGIC;
        y_out_write : OUT STD_LOGIC;
        buff_y_out_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_ce0 : OUT STD_LOGIC;
        buff_y_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_1_ce0 : OUT STD_LOGIC;
        buff_y_out_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_2_ce0 : OUT STD_LOGIC;
        buff_y_out_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buff_y_out_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        buff_y_out_3_ce0 : OUT STD_LOGIC;
        buff_y_out_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atax_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atax_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atax_buff_A_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atax_buff_x_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atax_buff_y_out_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component atax_tmp1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buff_A_U : component atax_buff_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_address0,
        ce0 => buff_A_ce0,
        we0 => buff_A_we0,
        d0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_d0,
        q0 => buff_A_q0,
        address1 => buff_A_address1,
        ce1 => buff_A_ce1,
        q1 => buff_A_q1);

    buff_A_1_U : component atax_buff_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_1_address0,
        ce0 => buff_A_1_ce0,
        we0 => buff_A_1_we0,
        d0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_d0,
        q0 => buff_A_1_q0,
        address1 => buff_A_1_address1,
        ce1 => buff_A_1_ce1,
        q1 => buff_A_1_q1);

    buff_x_U : component atax_buff_x_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_x_address0,
        ce0 => buff_x_ce0,
        we0 => buff_x_we0,
        d0 => bitcast_ln12_fu_331_p1,
        q0 => buff_x_q0,
        address1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_address1,
        ce1 => buff_x_ce1,
        q1 => buff_x_q1);

    buff_x_1_U : component atax_buff_x_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_x_1_address0,
        ce0 => buff_x_1_ce0,
        we0 => buff_x_1_we0,
        d0 => bitcast_ln12_fu_331_p1,
        q0 => buff_x_1_q0,
        address1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_address1,
        ce1 => buff_x_1_ce1,
        q1 => buff_x_1_q1);

    buff_y_out_U : component atax_buff_y_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_y_out_address0,
        ce0 => buff_y_out_ce0,
        we0 => buff_y_out_we0,
        d0 => buff_y_out_d0,
        q0 => buff_y_out_q0,
        address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_address1,
        ce1 => buff_y_out_ce1,
        q1 => buff_y_out_q1);

    buff_y_out_1_U : component atax_buff_y_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_y_out_1_address0,
        ce0 => buff_y_out_1_ce0,
        we0 => buff_y_out_1_we0,
        d0 => buff_y_out_1_d0,
        q0 => buff_y_out_1_q0,
        address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_address1,
        ce1 => buff_y_out_1_ce1,
        q1 => buff_y_out_1_q1);

    buff_y_out_2_U : component atax_buff_y_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_y_out_2_address0,
        ce0 => buff_y_out_2_ce0,
        we0 => buff_y_out_2_we0,
        d0 => buff_y_out_2_d0,
        q0 => buff_y_out_2_q0,
        address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_address1,
        ce1 => buff_y_out_2_ce1,
        q1 => buff_y_out_2_q1);

    buff_y_out_3_U : component atax_buff_y_out_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_y_out_3_address0,
        ce0 => buff_y_out_3_ce0,
        we0 => buff_y_out_3_we0,
        d0 => buff_y_out_3_d0,
        q0 => buff_y_out_3_q0,
        address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_address1,
        ce1 => buff_y_out_3_ce1,
        q1 => buff_y_out_3_q1);

    tmp1_U : component atax_tmp1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tmp1_address0,
        ce0 => tmp1_ce0,
        we0 => tmp1_we0,
        d0 => tmp1_d0,
        q0 => tmp1_q0);

    grp_atax_Pipeline_lp1_lp2_fu_216 : component atax_atax_Pipeline_lp1_lp2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atax_Pipeline_lp1_lp2_fu_216_ap_start,
        ap_done => grp_atax_Pipeline_lp1_lp2_fu_216_ap_done,
        ap_idle => grp_atax_Pipeline_lp1_lp2_fu_216_ap_idle,
        ap_ready => grp_atax_Pipeline_lp1_lp2_fu_216_ap_ready,
        buff_A_address0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address0,
        buff_A_ce0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce0,
        buff_A_q0 => buff_A_q0,
        buff_A_address1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address1,
        buff_A_ce1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce1,
        buff_A_q1 => buff_A_q1,
        buff_A_1_address0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address0,
        buff_A_1_ce0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce0,
        buff_A_1_q0 => buff_A_1_q0,
        buff_A_1_address1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address1,
        buff_A_1_ce1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce1,
        buff_A_1_q1 => buff_A_1_q1,
        buff_x_address0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_address0,
        buff_x_ce0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce0,
        buff_x_q0 => buff_x_q0,
        buff_x_address1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_address1,
        buff_x_ce1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce1,
        buff_x_q1 => buff_x_q1,
        buff_x_1_address0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_address0,
        buff_x_1_ce0 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce0,
        buff_x_1_q0 => buff_x_1_q0,
        buff_x_1_address1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_address1,
        buff_x_1_ce1 => grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce1,
        buff_x_1_q1 => buff_x_1_q1,
        tmp1_address0 => grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_address0,
        tmp1_ce0 => grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_ce0,
        tmp1_we0 => grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_we0,
        tmp1_d0 => grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_d0,
        tmp1_q0 => tmp1_q0,
        grp_fu_386_p_din0 => grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din0,
        grp_fu_386_p_din1 => grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din1,
        grp_fu_386_p_opcode => grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_opcode,
        grp_fu_386_p_dout0 => grp_fu_386_p2,
        grp_fu_386_p_ce => grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_ce,
        grp_fu_390_p_din0 => grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din0,
        grp_fu_390_p_din1 => grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din1,
        grp_fu_390_p_dout0 => grp_fu_390_p2,
        grp_fu_390_p_ce => grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_ce);

    grp_atax_Pipeline_lprd_2_fu_225 : component atax_atax_Pipeline_lprd_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atax_Pipeline_lprd_2_fu_225_ap_start,
        ap_done => grp_atax_Pipeline_lprd_2_fu_225_ap_done,
        ap_idle => grp_atax_Pipeline_lprd_2_fu_225_ap_idle,
        ap_ready => grp_atax_Pipeline_lprd_2_fu_225_ap_ready,
        zext_ln16 => tmp_1_reg_375,
        A_address0 => grp_atax_Pipeline_lprd_2_fu_225_A_address0,
        A_ce0 => grp_atax_Pipeline_lprd_2_fu_225_A_ce0,
        A_q0 => A_q0,
        i => trunc_ln11_reg_351,
        buff_A_address0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_address0,
        buff_A_ce0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_ce0,
        buff_A_we0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_we0,
        buff_A_d0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_d0,
        buff_A_1_address0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_address0,
        buff_A_1_ce0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_ce0,
        buff_A_1_we0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_we0,
        buff_A_1_d0 => grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_d0);

    grp_atax_Pipeline_lp3_lp4_fu_235 : component atax_atax_Pipeline_lp3_lp4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atax_Pipeline_lp3_lp4_fu_235_ap_start,
        ap_done => grp_atax_Pipeline_lp3_lp4_fu_235_ap_done,
        ap_idle => grp_atax_Pipeline_lp3_lp4_fu_235_ap_idle,
        ap_ready => grp_atax_Pipeline_lp3_lp4_fu_235_ap_ready,
        tmp1_address0 => grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_address0,
        tmp1_ce0 => grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_ce0,
        tmp1_q0 => tmp1_q0,
        buff_A_address0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address0,
        buff_A_ce0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce0,
        buff_A_q0 => buff_A_q0,
        buff_A_address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address1,
        buff_A_ce1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce1,
        buff_A_q1 => buff_A_q1,
        buff_A_1_address0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address0,
        buff_A_1_ce0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce0,
        buff_A_1_q0 => buff_A_1_q0,
        buff_A_1_address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address1,
        buff_A_1_ce1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce1,
        buff_A_1_q1 => buff_A_1_q1,
        buff_y_out_address0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_address0,
        buff_y_out_ce0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce0,
        buff_y_out_we0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_we0,
        buff_y_out_d0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_d0,
        buff_y_out_address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_address1,
        buff_y_out_ce1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce1,
        buff_y_out_q1 => buff_y_out_q1,
        buff_y_out_1_address0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_address0,
        buff_y_out_1_ce0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce0,
        buff_y_out_1_we0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_we0,
        buff_y_out_1_d0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_d0,
        buff_y_out_1_address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_address1,
        buff_y_out_1_ce1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce1,
        buff_y_out_1_q1 => buff_y_out_1_q1,
        buff_y_out_2_address0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_address0,
        buff_y_out_2_ce0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce0,
        buff_y_out_2_we0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_we0,
        buff_y_out_2_d0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_d0,
        buff_y_out_2_address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_address1,
        buff_y_out_2_ce1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce1,
        buff_y_out_2_q1 => buff_y_out_2_q1,
        buff_y_out_3_address0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_address0,
        buff_y_out_3_ce0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce0,
        buff_y_out_3_we0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_we0,
        buff_y_out_3_d0 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_d0,
        buff_y_out_3_address1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_address1,
        buff_y_out_3_ce1 => grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce1,
        buff_y_out_3_q1 => buff_y_out_3_q1,
        grp_fu_386_p_din0 => grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din0,
        grp_fu_386_p_din1 => grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din1,
        grp_fu_386_p_opcode => grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_opcode,
        grp_fu_386_p_dout0 => grp_fu_386_p2,
        grp_fu_386_p_ce => grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_ce,
        grp_fu_390_p_din0 => grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din0,
        grp_fu_390_p_din1 => grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din1,
        grp_fu_390_p_dout0 => grp_fu_390_p2,
        grp_fu_390_p_ce => grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_ce);

    grp_atax_Pipeline_lpwr_1_fu_246 : component atax_atax_Pipeline_lpwr_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_atax_Pipeline_lpwr_1_fu_246_ap_start,
        ap_done => grp_atax_Pipeline_lpwr_1_fu_246_ap_done,
        ap_idle => grp_atax_Pipeline_lpwr_1_fu_246_ap_idle,
        ap_ready => grp_atax_Pipeline_lpwr_1_fu_246_ap_ready,
        y_out_din => grp_atax_Pipeline_lpwr_1_fu_246_y_out_din,
        y_out_full_n => y_out_full_n,
        y_out_write => grp_atax_Pipeline_lpwr_1_fu_246_y_out_write,
        buff_y_out_address0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_address0,
        buff_y_out_ce0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_ce0,
        buff_y_out_q0 => buff_y_out_q0,
        buff_y_out_1_address0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_address0,
        buff_y_out_1_ce0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_ce0,
        buff_y_out_1_q0 => buff_y_out_1_q0,
        buff_y_out_2_address0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_address0,
        buff_y_out_2_ce0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_ce0,
        buff_y_out_2_q0 => buff_y_out_2_q0,
        buff_y_out_3_address0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_address0,
        buff_y_out_3_ce0 => grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_ce0,
        buff_y_out_3_q0 => buff_y_out_3_q0);

    fadd_32ns_32ns_32_4_full_dsp_1_U35 : component atax_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_386_p0,
        din1 => grp_fu_386_p1,
        ce => grp_fu_386_ce,
        dout => grp_fu_386_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U36 : component atax_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_390_p0,
        din1 => grp_fu_390_p1,
        ce => grp_fu_390_ce,
        dout => grp_fu_390_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_atax_Pipeline_lp1_lp2_fu_216_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atax_Pipeline_lp1_lp2_fu_216_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln11_fu_268_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_atax_Pipeline_lp1_lp2_fu_216_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atax_Pipeline_lp1_lp2_fu_216_ap_ready = ap_const_logic_1)) then 
                    grp_atax_Pipeline_lp1_lp2_fu_216_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_atax_Pipeline_lp3_lp4_fu_235_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atax_Pipeline_lp3_lp4_fu_235_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_atax_Pipeline_lp3_lp4_fu_235_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atax_Pipeline_lp3_lp4_fu_235_ap_ready = ap_const_logic_1)) then 
                    grp_atax_Pipeline_lp3_lp4_fu_235_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_atax_Pipeline_lprd_2_fu_225_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atax_Pipeline_lprd_2_fu_225_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_atax_Pipeline_lprd_2_fu_225_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atax_Pipeline_lprd_2_fu_225_ap_ready = ap_const_logic_1)) then 
                    grp_atax_Pipeline_lprd_2_fu_225_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_atax_Pipeline_lpwr_1_fu_246_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_atax_Pipeline_lpwr_1_fu_246_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_atax_Pipeline_lpwr_1_fu_246_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_atax_Pipeline_lpwr_1_fu_246_ap_ready = ap_const_logic_1)) then 
                    grp_atax_Pipeline_lpwr_1_fu_246_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_74 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_fu_74 <= add_ln11_reg_360;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln11_reg_360 <= add_ln11_fu_274_p2;
                trunc_ln11_reg_351 <= trunc_ln11_fu_264_p1;
                    zext_ln11_reg_365(6 downto 0) <= zext_ln11_fu_280_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    tmp_1_reg_375(11 downto 6) <= tmp_1_fu_285_p3(11 downto 6);
            end if;
        end if;
    end process;
    zext_ln11_reg_365(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    tmp_1_reg_375(5 downto 0) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_atax_Pipeline_lp1_lp2_fu_216_ap_done, grp_atax_Pipeline_lprd_2_fu_225_ap_done, grp_atax_Pipeline_lp3_lp4_fu_235_ap_done, grp_atax_Pipeline_lpwr_1_fu_246_ap_done, icmp_ln11_fu_268_p2, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln11_fu_268_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_atax_Pipeline_lprd_2_fu_225_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_atax_Pipeline_lp1_lp2_fu_216_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_atax_Pipeline_lp3_lp4_fu_235_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_atax_Pipeline_lpwr_1_fu_246_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    A_address0 <= grp_atax_Pipeline_lprd_2_fu_225_A_address0;
    A_ce0 <= grp_atax_Pipeline_lprd_2_fu_225_A_ce0;
    add_ln11_fu_274_p2 <= std_logic_vector(unsigned(i_fu_74) + unsigned(ap_const_lv7_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_atax_Pipeline_lprd_2_fu_225_ap_done)
    begin
        if ((grp_atax_Pipeline_lprd_2_fu_225_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_ap_done)
    begin
        if ((grp_atax_Pipeline_lp1_lp2_fu_216_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_atax_Pipeline_lp3_lp4_fu_235_ap_done)
    begin
        if ((grp_atax_Pipeline_lp3_lp4_fu_235_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_atax_Pipeline_lpwr_1_fu_246_ap_done)
    begin
        if ((grp_atax_Pipeline_lpwr_1_fu_246_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_atax_Pipeline_lpwr_1_fu_246_ap_done, ap_CS_fsm_state9)
    begin
        if (((grp_atax_Pipeline_lpwr_1_fu_246_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_atax_Pipeline_lpwr_1_fu_246_ap_done, ap_CS_fsm_state9)
    begin
        if (((grp_atax_Pipeline_lpwr_1_fu_246_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln12_fu_331_p1 <= x_q0;

    buff_A_1_address0_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address0, grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_address0, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address0, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_1_address0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A_1_address0 <= grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_1_address0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address0;
        else 
            buff_A_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buff_A_1_address1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address1, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_1_address1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_1_address1 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_address1;
        else 
            buff_A_1_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buff_A_1_ce0_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce0, grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_ce0, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce0, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_1_ce0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A_1_ce0 <= grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_1_ce0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce0;
        else 
            buff_A_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_1_ce1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce1, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_1_ce1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_1_ce1 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_1_ce1;
        else 
            buff_A_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_1_we0_assign_proc : process(grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A_1_we0 <= grp_atax_Pipeline_lprd_2_fu_225_buff_A_1_we0;
        else 
            buff_A_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_address0_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address0, grp_atax_Pipeline_lprd_2_fu_225_buff_A_address0, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address0, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_address0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A_address0 <= grp_atax_Pipeline_lprd_2_fu_225_buff_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_address0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address0;
        else 
            buff_A_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buff_A_address1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address1, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_address1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_address1 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_address1;
        else 
            buff_A_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buff_A_ce0_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce0, grp_atax_Pipeline_lprd_2_fu_225_buff_A_ce0, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce0, ap_CS_fsm_state5, ap_CS_fsm_state4, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_ce0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A_ce0 <= grp_atax_Pipeline_lprd_2_fu_225_buff_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_ce0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce0;
        else 
            buff_A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_ce1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce1, grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_A_ce1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_A_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_A_ce1 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_A_ce1;
        else 
            buff_A_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_A_we0_assign_proc : process(grp_atax_Pipeline_lprd_2_fu_225_buff_A_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buff_A_we0 <= grp_atax_Pipeline_lprd_2_fu_225_buff_A_we0;
        else 
            buff_A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_x_1_address0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_address0, ap_CS_fsm_state5, zext_ln5_1_fu_325_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_x_1_address0 <= zext_ln5_1_fu_325_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_x_1_address0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_address0;
        else 
            buff_x_1_address0 <= "XXXXX";
        end if; 
    end process;


    buff_x_1_ce0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_x_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_x_1_ce0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce0;
        else 
            buff_x_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_x_1_ce1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_x_1_ce1 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_1_ce1;
        else 
            buff_x_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_x_1_we0_assign_proc : process(ap_CS_fsm_state3, trunc_ln11_1_fu_293_p1)
    begin
        if (((trunc_ln11_1_fu_293_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buff_x_1_we0 <= ap_const_logic_1;
        else 
            buff_x_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_x_address0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_address0, ap_CS_fsm_state5, zext_ln5_1_fu_325_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_x_address0 <= zext_ln5_1_fu_325_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_x_address0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_address0;
        else 
            buff_x_address0 <= "XXXXX";
        end if; 
    end process;


    buff_x_ce0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_x_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_x_ce0 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce0;
        else 
            buff_x_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_x_ce1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buff_x_ce1 <= grp_atax_Pipeline_lp1_lp2_fu_216_buff_x_ce1;
        else 
            buff_x_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_x_we0_assign_proc : process(ap_CS_fsm_state3, trunc_ln11_1_fu_293_p1)
    begin
        if (((trunc_ln11_1_fu_293_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buff_x_we0 <= ap_const_logic_1;
        else 
            buff_x_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_1_address0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_address0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_address0, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln5_fu_308_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_1_address0 <= zext_ln5_fu_308_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_1_address0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_1_address0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_address0;
        else 
            buff_y_out_1_address0 <= "XXXX";
        end if; 
    end process;


    buff_y_out_1_ce0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_1_ce0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_1_ce0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce0;
        else 
            buff_y_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_1_ce1_assign_proc : process(grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_1_ce1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_ce1;
        else 
            buff_y_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_1_d0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_d0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_1_d0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_d0;
        else 
            buff_y_out_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_y_out_1_we0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_we0, ap_CS_fsm_state7, trunc_ln11_2_fu_296_p1)
    begin
        if (((trunc_ln11_2_fu_296_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buff_y_out_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_1_we0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_1_we0;
        else 
            buff_y_out_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_2_address0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_address0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_address0, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln5_fu_308_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_2_address0 <= zext_ln5_fu_308_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_2_address0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_2_address0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_address0;
        else 
            buff_y_out_2_address0 <= "XXXX";
        end if; 
    end process;


    buff_y_out_2_ce0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_2_ce0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_2_ce0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce0;
        else 
            buff_y_out_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_2_ce1_assign_proc : process(grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_2_ce1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_ce1;
        else 
            buff_y_out_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_2_d0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_d0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_2_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_2_d0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_d0;
        else 
            buff_y_out_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_y_out_2_we0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_we0, ap_CS_fsm_state7, trunc_ln11_2_fu_296_p1)
    begin
        if (((trunc_ln11_2_fu_296_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buff_y_out_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_2_we0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_2_we0;
        else 
            buff_y_out_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_3_address0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_address0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_address0, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln5_fu_308_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_3_address0 <= zext_ln5_fu_308_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_3_address0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_3_address0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_address0;
        else 
            buff_y_out_3_address0 <= "XXXX";
        end if; 
    end process;


    buff_y_out_3_ce0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_3_ce0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_3_ce0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce0;
        else 
            buff_y_out_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_3_ce1_assign_proc : process(grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_3_ce1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_ce1;
        else 
            buff_y_out_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_3_d0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_d0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_3_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_3_d0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_d0;
        else 
            buff_y_out_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_y_out_3_we0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_we0, ap_CS_fsm_state7, trunc_ln11_2_fu_296_p1)
    begin
        if (((trunc_ln11_2_fu_296_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buff_y_out_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_3_we0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_3_we0;
        else 
            buff_y_out_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_address0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_address0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_address0, ap_CS_fsm_state7, ap_CS_fsm_state9, zext_ln5_fu_308_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_address0 <= zext_ln5_fu_308_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_address0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_address0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_address0;
        else 
            buff_y_out_address0 <= "XXXX";
        end if; 
    end process;


    buff_y_out_ce0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce0, grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_ce0, ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            buff_y_out_ce0 <= grp_atax_Pipeline_lpwr_1_fu_246_buff_y_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_ce0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce0;
        else 
            buff_y_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_ce1_assign_proc : process(grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce1, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_ce1 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_ce1;
        else 
            buff_y_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buff_y_out_d0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_d0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            buff_y_out_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_d0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_d0;
        else 
            buff_y_out_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buff_y_out_we0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_we0, ap_CS_fsm_state7, trunc_ln11_2_fu_296_p1)
    begin
        if (((trunc_ln11_2_fu_296_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            buff_y_out_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            buff_y_out_we0 <= grp_atax_Pipeline_lp3_lp4_fu_235_buff_y_out_we0;
        else 
            buff_y_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_atax_Pipeline_lp1_lp2_fu_216_ap_start <= grp_atax_Pipeline_lp1_lp2_fu_216_ap_start_reg;
    grp_atax_Pipeline_lp3_lp4_fu_235_ap_start <= grp_atax_Pipeline_lp3_lp4_fu_235_ap_start_reg;
    grp_atax_Pipeline_lprd_2_fu_225_ap_start <= grp_atax_Pipeline_lprd_2_fu_225_ap_start_reg;
    grp_atax_Pipeline_lpwr_1_fu_246_ap_start <= grp_atax_Pipeline_lpwr_1_fu_246_ap_start_reg;

    grp_fu_386_ce_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_ce, grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_ce, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_386_ce <= grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_386_ce <= grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_ce;
        else 
            grp_fu_386_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_386_p0_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din0, grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_386_p0 <= grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_386_p0 <= grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din0;
        else 
            grp_fu_386_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_386_p1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din1, grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_386_p1 <= grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_386_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_386_p1 <= grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_386_p_din1;
        else 
            grp_fu_386_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_390_ce_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_ce, grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_ce, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_390_ce <= grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_390_ce <= grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_ce;
        else 
            grp_fu_390_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_390_p0_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din0, grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_390_p0 <= grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_390_p0 <= grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din0;
        else 
            grp_fu_390_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_390_p1_assign_proc : process(grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din1, grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fu_390_p1 <= grp_atax_Pipeline_lp3_lp4_fu_235_grp_fu_390_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_390_p1 <= grp_atax_Pipeline_lp1_lp2_fu_216_grp_fu_390_p_din1;
        else 
            grp_fu_390_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln11_fu_268_p2 <= "1" when (i_fu_74 = ap_const_lv7_40) else "0";
    lshr_ln5_1_fu_316_p4 <= i_fu_74(5 downto 1);
    lshr_ln5_fu_299_p4 <= i_fu_74(5 downto 2);

    tmp1_address0_assign_proc : process(zext_ln11_reg_365, ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_address0, grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp1_address0 <= zext_ln11_reg_365(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp1_address0 <= grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            tmp1_address0 <= grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_address0;
        else 
            tmp1_address0 <= "XXXXXX";
        end if; 
    end process;


    tmp1_ce0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_ce0, grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp1_ce0 <= grp_atax_Pipeline_lp3_lp4_fu_235_tmp1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            tmp1_ce0 <= grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_ce0;
        else 
            tmp1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp1_d0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_d0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            tmp1_d0 <= grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_d0;
        else 
            tmp1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp1_we0_assign_proc : process(ap_CS_fsm_state3, grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            tmp1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            tmp1_we0 <= grp_atax_Pipeline_lp1_lp2_fu_216_tmp1_we0;
        else 
            tmp1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_285_p3 <= (trunc_ln11_reg_351 & ap_const_lv6_0);
    trunc_ln11_1_fu_293_p1 <= i_fu_74(1 - 1 downto 0);
    trunc_ln11_2_fu_296_p1 <= i_fu_74(2 - 1 downto 0);
    trunc_ln11_fu_264_p1 <= i_fu_74(6 - 1 downto 0);
    x_address0 <= zext_ln11_fu_280_p1(6 - 1 downto 0);

    x_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            x_ce0 <= ap_const_logic_1;
        else 
            x_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    y_out_din <= grp_atax_Pipeline_lpwr_1_fu_246_y_out_din;

    y_out_write_assign_proc : process(grp_atax_Pipeline_lpwr_1_fu_246_y_out_write, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            y_out_write <= grp_atax_Pipeline_lpwr_1_fu_246_y_out_write;
        else 
            y_out_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln11_fu_280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_74),64));
    zext_ln5_1_fu_325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_1_fu_316_p4),64));
    zext_ln5_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln5_fu_299_p4),64));
end behav;
