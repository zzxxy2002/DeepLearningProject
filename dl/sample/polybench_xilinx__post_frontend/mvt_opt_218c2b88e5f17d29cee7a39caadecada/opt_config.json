{
    "static_lines": "set_directive_resource -core RAM_1P \"mvt\" A\nset_directive_resource -core RAM_1P \"mvt\" x1\nset_directive_resource -core RAM_1P \"mvt\" x2\nset_directive_resource -core RAM_1P \"mvt\" y1\nset_directive_interface -mode ap_fifo \"mvt\" y2\nset_directive_interface -mode ap_fifo \"mvt\" x1_out\nset_directive_interface -mode ap_fifo \"mvt\" x2_out\nset_directive_pipeline \"mvt/lprd_2\"\nset_directive_pipeline \"mvt/lpwr\"\n",
    "array_partition_lines": [
        "set_directive_array_partition -type cyclic -factor 2 -dim 2 \"mvt\" A\nset_directive_array_partition -type cyclic -factor 2 -dim 2 \"mvt\" buff_A\nset_directive_array_partition -type cyclic -factor 2 -dim 1 \"mvt\" buff_x1\nset_directive_array_partition -type cyclic -factor 2 -dim 1 \"mvt\" buff_x2\nset_directive_array_partition -type cyclic -factor 2 -dim 1 \"mvt\" buff_y1\nset_directive_array_partition -type cyclic -factor 2 -dim 1 \"mvt\" buff_y2\nset_directive_unroll -factor 2 \"mvt/lprd_2\"\nset_directive_unroll -factor 2 \"mvt/lpwr\"\n"
    ],
    "loop_opt_lines": [
        "set_directive_pipeline mvt/lp1\nset_directive_unroll -factor 1 mvt/lp1\n",
        "set_directive_unroll -factor 2 mvt/lp4\n"
    ]
}